{
  "openapi": "3.0.1",
  "info": {
    "title": "Text Search",
    "description": "Text Search API is a service that aims to provide information about a list of places on the basis of text string entered by user. It uses the location information that is provided along with the query to try to understand the request. Powered with Indias most comprehensive and robust mapping functionalities. Now Available for Srilanka, Nepal, Bhutan and Bangladesh <h2>New Feature(s):</h2><p><ul><li>`Filter`</li></ul><p></br> <h2>Filter</h2><p>We are introducing this new parameter to do more specific search using `key:value` pair(s) (e.g. cat_code:ABC123). <ul> <li>Each `key:value`pair is seperated by a seperator`,`</br> *(e.g. filter=cat_code:abc123,mac_plug_type:PN3)*.</br></br> <li>We can use two or more `values` for a `key` by putting either `OR(;)` or `AND($)` operator </br>*(e.g. cat_code:abc123;xyz123,mac_plug_type:PN3&PN2)*.</br></br> <li>By default  `key:value` pairs are treated as `AND($)` case.   </ul> <p>Suppose you want to search all electric vehical charging station of a particular brand*(e.g. \"Honda\" )* and of a particular plug type *(e.g. \"PN3\")* then you can use filter as:</br> </br> *(filter=cat_code:EVSTAN,brand_id:HONDAV,mac_plug_type:PN3)*</br></br> where EVSTAN is category code for EV station, HONDAV is brand_id for Honda and PN3 is plug type. </br></br> <b>Keys</b>: *\"cat_code\", \"brand_id\", \"partner_id\", \"mac_plug_type\".*</br></br> <b>Note:</b> <li>`keys` & `values` are dynamic in nature.</li><br> <li> `,` This is used as an example operator to explain query.</li> </br> </br> <h2>Operators</h2><p>To send multiple keywords in a request, we’ve defined a couple of operators that can help the developers wrap their applications around this functionality. Below are the operators:</p> <ul> <li>The `;` Operator: This operator is an `OR` operator. Defining multiple keywords separated with a `;` would provide results that satisfies either of the keywords.\\ <li>The `$` Operator: This operator is an `AND` operator. Defining multiple keywords separated with a `$` would provide results that satisfy all the provided keywords. (default). <li>The `,` operator: This operator is a seperator for using two or more `key:value` pairs and it has functionality of `AND($)`   </ul> <p>To use these operators, simple just send in the keywords parameter like below:</br> *&keywords=coffee;tea$sea food;alcohol* </br> The above nearby search would yield in results that either provide coffee or tea but must provide either sea food or alcohol. </p></br> <p><br> <h2>Security Type:</h2> <p>This APIs follow OAuth2 based security. <b>To know more on how to create your authorization tokens, please click the `Authorize` button below. More details available <a href=\"https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php\">here</a></b></br></br> <li><a href=\"https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-maps-auto-suggest-api-example.php\">Live Demo</a> </br><li><a href=\"https://www.mapmyindia.com/api/login\">Login/Sing Up</a> for API key and other access. <h2>Other Info</h2><ul>  <li>URLs: the urls to use for UAT and Prod are: <code>https://https://atlasweb.mapmyindia.in/api/v3.5/places/textsearch/json? and <code>https://atlas.mapmyindia.com/api/places/textsearch/json?</code></li>   <li>For any issues or questions please submit it to the support : <a href= \"https://www.mapmyindia.com/api/#f_cont\" target=\"_blank\"> API Support</a>  if you have not got access to the support portal contact your service account manager with any questions</li></ul> <h3>Example request:</h3> <code>https://https://atlas.mapmyindia.com/api/places/textsearch/json?access_token=ef665285-0c51-4ab1-8f36-75febf3689d1&query=okhla phase 3&location=28.547008, 77.266256</code></br></br></br></br>",
    "termsOfService": "https://www.mapmyindia.com/api/terms-&-conditions",
    "version": "V.3.5",
    "contact": {
      "name": "MapmyIndia API Support",
      "url": "https://www.mapmyindia.com/api/#f_cont",
      "email": "apisupport@mapmyindia.com"
    }
  },
  "servers": [
    {
      "url": "https://atlas.mapmyindia.com/api/places/textsearch/json?"
    }
  ],
  "tags": [
    {
      "name": "Text Search",
      "description": "This is used for search place by text string"
    }
  ],
  "paths": {
    "/APISearch": {
      "get": {
        "tags": [
          "Text Search"
        ],
        "summary": "Easy To Integrate Maps & Location APIs & SDKs For Web & Mobile Applications",
        "description": "Text Search is an API that returns information about a set of places based on a string.",
        "operationId": "TextSearchAPI",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The Text search on which to search",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "It takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND)",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Provides the location around which the search will be performed",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter*",
            "in": "query",
            "description": "*key:value* pair to specified our seach.(e.g. For all honda EV stations: *filter=cat_code:EVSTAN,brand_id:HONDAV*, where EVSTAN is category code and HONDAV is brand_id for Honda)",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "204": {
            "description": "No matches we are found for the provided query"
          },
          "400": {
            "description": "Something’s just not right with the request"
          },
          "401": {
            "description": "Access Denied"
          },
          "403": {
            "description": "Services for this key has been suspended due to daily              /hourly transactions limit"
          },
          "500": {
            "description": "Something went wrong"
          },
          "503": {
            "description": "Maintenance Break"
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://atlas.mapmyindia.com/api/places/textsearch/json?",
            "description": "MapmyIndia Text Search API for development"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Filter": {
        "title": "Filter",
        "type": "object",
        "properties": {
          "cat_code": {
            "type": "string",
            "description": "Category Code",
            "format": "string",
            "example": "MBLDNG"
          },
          "brand_id": {
            "type": "string",
            "description": "Brand ID",
            "format": "string",
            "example": "HONDAV"
          },
          "mac_plug_type": {
            "type": "string",
            "description": "MAC plug type",
            "format": "string",
            "example": "PN3"
          },
          "partner_id": {
            "type": "string",
            "description": "Partner ID",
            "format": "string",
            "example": "ABC123"
          }
        },
        "description": "Sample of fields for specified search."
      },
      "Coordinate": {
        "title": "Coordinate",
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude",
            "format": "double",
            "example": 28.63146
          },
          "lng": {
            "type": "number",
            "description": "Longitude",
            "format": "double",
            "example": 77.217423
          }
        },
        "description": "Georgraphic coordinate in decimal latitude/longitude format"
      },
      "query": {
        "title": "query",
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "example": "FODCOF, Shoes, Coffee, Versace"
          }
        },
        "description": "This category search placed like Gucci, H&M, Adidas,                  Starbucks"
      },
      "Response": {
        "title": "Response",
        "required": [
          "type",
          "typeX",
          "placeAddress",
          "latitude",
          "longitude",
          "eloc",
          "entryLatitude",
          "entryLongitude",
          "placeName",
          "alternateName",
          "keywords",
          "p",
          "distance",
          "orderIndex",
          "score",
          "suggestor",
          "addressTokens"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "LOCALITY",
            "description": "Type of location POI or Country or City"
          },
          "typeX": {
            "type": "integer",
            "example": 5,
            "description": "For integer use only"
          },
          "placeAddress": {
            "type": "string",
            "example": "New Delhi, Delhi, 110020",
            "description": "Address of the location"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 28.551574,
            "description": "Latitude of the location"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 77.269148,
            "description": "Longitude of the location"
          },
          "eLoc": {
            "type": "string",
            "example": "YMCZ0J",
            "description": "Place Id of the location 6-char alphanumeric"
          },
          "entryLatitude": {
            "type": "number",
            "format": "double",
            "example": 28.551949,
            "description": "Latitude of the entrance of the location"
          },
          "entryLongitude": {
            "type": "number",
            "format": "double",
            "example": 77.269124,
            "description": "Longitude of the entrance of the location"
          },
          "placeName": {
            "type": "string",
            "example": "Okhla Industrial Estate Phase 3",
            "description": "Name of the location"
          },
          "alternateName": {
            "type": "string",
            "example": "Okhla Phase 3,Okhla Industrial Area Phase 3",
            "description": "Alternate name of the location"
          },
          "keywords": {
            "type": "string",
            "example": "[]",
            "description": "Provides an array of matched keywords or codes"
          },
          "P": {
            "type": "number",
            "format": "long integer",
            "example": 2536,
            "description": "For internal use only"
          },
          "distance": {
            "type": "integer",
            "example": 0,
            "description": "For internal use only"
          },
          "orderIndex": {
            "type": "integer",
            "example": 1,
            "description": "The order where this result should be placed"
          },
          "score": {
            "type": "number",
            "format": "double",
            "example": 8.746293,
            "description": "For internal use only"
          },
          "suggester": {
            "type": "string",
            "example": "alternateName",
            "description": "For internal use only"
          },
          "addressTokens": {
            "type": "string",
            "example": {},
            "description": "For internal use only"
          }
        }
      }
    },
    "securitySchemes": {
      "mmi_auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://outpost.mapmyindia.com/api/security/oauth/token",
            "scopes": {
              "Read": "read authorization for API"
            }
          }
        }
      }
    }
  }
}