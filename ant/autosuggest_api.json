{
  "openapi": "3.0.1",
  "info": {
    "title": "Autosuggest API",
    "description": "The Autosuggest API helps users to complete queries faster by adding intelligent search capabilities to your web or mobile app. This API returns a list of results as well as suggested queries as the user types in the search field. <h2>New Feature(s):</h2><p><ul><li>`Filter`</li></ul><p></br> <h2>Filter</h2><p>We are introducing this new parameter to do more specific search using `key:value` pair(s) (e.g. cat_code:ABC123). <ul> <li>Each `key:value`pair is seperated by a seperator`,`</br> *(e.g. filter=cat_code:abc123,mac_plug_type:PN3)*.</br></br> <li>We can use two or more `values` for a `key` by putting either `OR(;)` or `AND($)` operator </br>*(e.g. cat_code:abc123;xyz123,mac_plug_type:PN3&PN2)*.</br></br> <li>By default  `key:value` pairs are treated as `AND($)` case.   </ul> <p>Suppose you want to search all electric vehical charging station of a particular brand*(e.g. \"Honda\" )* and of a particular plug type *(e.g. \"PN3\")* then you can use filter as:</br> </br> *(filter=cat_code:EVSTAN,brand_id:HONDAV,mac_plug_type:PN3)*</br></br> where EVSTAN is category code for EV station, HONDAV is brand_id for Honda and PN3 is plug type. </br></br> <b>Keys</b>: *\"cat_code\", \"brand_id\", \"partner_id\", \"mac_plug_type\".*</br></br> <b>Note:</b> <li>`keys` & `values` are dynamic in nature.</li><br> <li> `,` This is used as an example operator to explain query.</li> </br> </br> <h2>Operators</h2><p>To send multiple keywords in a request, we’ve defined a couple of operators that can help the developers wrap their applications around this functionality. Below are the operators:</p> <ul> <li>The `;` Operator: This operator is an `OR` operator. Defining multiple keywords separated with a `;` would provide results that satisfies either of the keywords.\\ <li>The `$` Operator: This operator is an `AND` operator. Defining multiple keywords separated with a `$` would provide results that satisfy all the provided keywords. (default). <li>The `,` operator: This operator is a seperator for using two or more `key:value` pairs and it has functionality of `AND($)`   </ul> <p>To use these operators, simple just send in the keywords parameter like below:</br> *&keywords=coffee;tea$sea food;alcohol* </br> The above nearby search would yield in results that either provide coffee or tea but must provide either sea food or alcohol. </p></br> <p><br> <h2>Security Type:</h2> <p>Atlas OAuth 2.0 based security using AES 256 and SHA-1. <b>To know more on how to create your authorization tokens, please click the `Authorize` button below. More details available <a href=\"https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php\">here</a></b></br></br> <li><a href=\"https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-maps-auto-suggest-api-example.php\">Live Demo</a> </br><li><a href=\"https://www.mapmyindia.com/api/login\">Login/Sing Up</a> for API key and other access. <h2>Other Info</h2><ul>  <li>URLs: the urls to use for UAT and Prod are: <code>https://https://atlasweb.mapmyindia.in/api/v3.5/places/textsearch/json? and <code>https://atlas.mapmyindia.com/api/places/textsearch/json?</code></li>   <li>For any issues or questions please submit it to the support : <a href= \"https://www.mapmyindia.com/api/#f_cont\" target=\"_blank\"> API Support</a>  if you have not got access to the support portal contact your service account manager with any questions</li></ul> <h3>Example request:</h3> <code>https://https://atlas.mapmyindia.com/api/places/search/json?access_token=ef665285-0c51-4ab1-8f36-75febf3689d1&query=okhla phase 3&location=28.547008, 77.266256</code></br></br></br></br>",
    "termsOfService": "https://www.mapmyindia.com/api/terms-&-conditions",
    "version": "V.3.5",
    "contact": {
      "name": "MapmyIndia API Support",
      "url": "https://www.mapmyindia.com/api/#f_cont",
      "email": "apisupport@mapmyindia.com"
    }
  },
  "servers": [
    {
      "url": "https://atlas.mapmyindia.com/api/places/search/json?"
    }
  ],
  "tags": [
    {
      "name": "Autosuggest API",
      "description": "This is used to give suggestions of places"
    }
  ],
  "paths": {
    "/APISearch": {
      "get": {
        "tags": [
          "Autosuggest API"
        ],
        "summary": "Easy To Integrate Maps & Location APIs & SDKs For Web & Mobile Applications",
        "description": "Autosuggest is an API that gives suggestions of places based on a typed string.",
        "operationId": "AutosuggestAPI",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Sme text to give suggestions of places",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "It takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND)",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Provides the location around which the search will be performed",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zoom",
            "in": "query",
            "description": "takes the zoom level of the current scope of the map (min: 4, max: 18).",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pod",
            "in": "query",
            "description": "it takes in the place type code which helps in restricting the results to certain chosen type.",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenizeAddress",
            "in": "query",
            "description": " it takes in the place type code which helps in restricting the results to certain chosen type(e.g. sslc, lc, district, state, city, village, pincode)",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "*key:value* pair to specified our seach.(e.g. For all honda EV stations: *filter=cat_code:EVSTAN,brand_id:HONDAV*, where EVSTAN is category code and HONDAV is brand_id for Honda)",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "204": {
            "description": "No matches we are found for the provided query"
          },
          "400": {
            "description": "Something’s just not right with the request"
          },
          "401": {
            "description": "Access Denied"
          },
          "403": {
            "description": "Services for this key has been suspended due to daily              /hourly transactions limit"
          },
          "500": {
            "description": "Something went wrong"
          },
          "503": {
            "description": "Maintenance Break"
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://atlas.mapmyindia.com/api/places/textsearch/json?",
            "description": "MapmyIndia Text Search API for development"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Filter": {
        "title": "Filter",
        "type": "object",
        "properties": {
          "cat_code": {
            "type": "string",
            "description": "Category Code",
            "format": "string",
            "example": "MBLDNG"
          },
          "brand_id": {
            "type": "string",
            "description": "Brand ID",
            "format": "string",
            "example": "HONDAV"
          },
          "mac_plug_type": {
            "type": "string",
            "description": "MAC plug type",
            "format": "string",
            "example": "PN3"
          },
          "partner_id": {
            "type": "string",
            "description": "Partner ID",
            "format": "string",
            "example": "ABC123"
          }
        },
        "description": "Sample of fields for specified search."
      },
      "Coordinate": {
        "title": "Coordinate",
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude",
            "format": "double",
            "example": 28.63146
          },
          "lng": {
            "type": "number",
            "description": "Longitude",
            "format": "double",
            "example": 77.217423
          }
        },
        "description": "Georgraphic coordinate in decimal latitude/longitude format"
      },
      "query": {
        "title": "query",
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "example": "FODCOF, Shoes, Coffee, Versace"
          }
        },
        "description": "This category search placed like Gucci, H&M, Adidas,                  Starbucks"
      },
      "Response": {
        "title": "Response",
        "required": [
          "eLoc",
          "placeName",
          "placeAddress",
          "type",
          "latitude",
          "longitude",
          "orderIndex",
          "keywords",
          "addressTokens"
        ],
        "type": "object",
        "properties": {
          "eLoc": {
            "type": "string",
            "example": "ABC123",
            "description": "6-Character unique code for each address token."
          },
          "placeName": {
            "type": "string",
            "example": "Paharganj",
            "description": "Name of the location."
          },
          "placeAddress": {
            "type": "string",
            "example": "New Delhi, Delhi, 110020",
            "description": "Address of the location"
          },
          "type": {
            "type": "string",
            "example": "City",
            "description": "type of location POI or Country or City"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 77.269148,
            "description": "Latitude of the location"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 28.551949,
            "description": "Latitude of the entrance of the location"
          },
          "orderIndex": {
            "type": "number",
            "example": 1,
            "description": "the order where this result should be placed"
          },
          "keywords": {
            "type": "string",
            "example": "xyz123",
            "description": "contains the category code to which the POI result(if applicable) belongs to."
          },
          "addressTokens": {
            "type": "string",
            "example": "poi, locality, city, state, street",
            "description": "Token of address"
          }
        }
      },
      "addressToken(Response)": {
        "title": "addressToken(Response)",
        "required": [
          "houseNumber",
          "houseName",
          "poi",
          "street",
          "subSubLocality",
          "subLocality",
          "locality",
          "village",
          "subDistrict",
          "district",
          "city",
          "state",
          "pincode"
        ],
        "type": "object",
        "properties": {
          "houseNumber": {
            "type": "string",
            "example": "A12",
            "description": "House number"
          },
          "houseName": {
            "type": "string",
            "example": "mannat",
            "description": "House name"
          },
          "poi": {
            "type": "string",
            "example": "cafe coffe day",
            "description": "point of interest name"
          },
          "street": {
            "type": "string",
            "example": "raj guru road",
            "description": "road/street name"
          },
          "subSubLocality": {
            "type": "string",
            "example": "rajpura colony",
            "description": "sub sub locality name"
          },
          "subLocality": {
            "type": "string",
            "example": "ganesh colony",
            "description": "sub locality name"
          },
          "locality": {
            "type": "string",
            "example": "okhla",
            "description": "locality name"
          },
          "village": {
            "type": "string",
            "example": "madhubani",
            "description": "village name"
          },
          "subDistrict": {
            "type": "string",
            "example": "poi, locality",
            "description": "type of place"
          },
          "district": {
            "type": "string",
            "example": "supaul",
            "description": "district name"
          },
          "city": {
            "type": "string",
            "example": "new delhi",
            "description": "city name"
          },
          "state": {
            "type": "string",
            "example": "delhi",
            "description": "state name"
          },
          "pincode": {
            "type": "integer",
            "example": 110011,
            "description": "postal code of the place"
          }
        }
      }
    },
    "securitySchemes": {
      "mmi_auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://outpost.mapmyindia.com/api/security/oauth/token",
            "scopes": {
              "Read": "read authorization for API"
            }
          }
        }
      }
    }
  }
}