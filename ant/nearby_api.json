{
  "openapi": "3.0.1",
  "info": {
    "title": "Nearby API",
    "description": "Nearby Places API, enables you to add discovery and search of nearby POIs by searching for a generic keyword used to describe a category of places or via the unique code assigned to that category. <p>MapmyIndia Nearby API Platform provides following advance features:</p> <ul> <li>Custom Category Code <li>POD <li>Filter <li>searchBy <li>sortBy </ul> <h3>Custom Category Code</h3> <p>This will enable custom category code based nearby searching for customers*(e.g. Honda, HDFC)*.The search can be performed on the basis of either custom category code or MMI category codes or keywords. The output contains standard fields and a richInfo object for client-specific data. The RichInfo can have dynamic response parameters as per customer requirement. This can be enabled on the basis of configuration provided at the time of onboarding customer data.</p> <ul> <li>Pass Custom Codes like *Keywords*.</li> <li>The custom code keywords like HNDAUT, HNDREP for searching near pois like Honda Stores.</li> </ul> <h3>POD</h3> <p> Introducing \"pod\" parameter to search for villages. This parameter accepts \"vlg\" as value. The radius for village provides the range of distance. The radius for village search is 50 KM fixed.</p> <h3>Filter</h3> <p>The filter feature in Nearby API empowers the user a fine discovery of EV charging stations along with the existing keyword and category code lookups. It uses `key:value` pair(s).</br> *(e.g. brand_id:ABC123)*</p> <ul>  <li>Currently, filters are supported on brand id, connector type and car model.</br></br> <li>Each `key:value`pair is seperated by a seperator`,`</br> *(e.g. filter=brand_id:abc123,mac_plug_type:PN3)*.</br></br>  <li>We can use two or more `values` for a `key` by putting either `OR(;)` or `AND($)` operator </br>*(e.g. brand_id:abc123;xyz123,mac_plug_type:PN3&PN2)*.</br></br> <li>By default  `key:value` pairs are treated as `AND($)` case.    </ul>  <p>Suppose you want to search all electric vehical charging station of a particular brand*(e.g. \"Honda\" )* and of a particular plug type *(e.g. \"PN3\")* then you can use filter as:</br> </br> *(filter=brand_id:HONDAV,mac_plug_type:PN3)*</br></br> where HONDAV is brand_id for Honda and PN3 is plug type. </p></br> <b>Keys</b>: \"brand_id\", \"model\", \"mac_plug_type\".</p> <h4>Below is the UAT URL for your testing</h4> <p>*https://atlasweb.mapmyindia.in/api/v4.4/places/nearby/json?keywords=charging stations&refLocation=28.5507160000001,77.2689280000001&filter=plugType:C2B; type 2 ,model:Fortum*</p></br></br> <b>Note:</b> Currently it works for Electric Vehicle Charging Stations. </br></br> <h3>searchBy</h3> <p>Search and Sort Nearby Places on the basis of either *\"Distance\"* or *\"Relevance/Importance\"*.</p> <ul> <li> *dist* keyword is used to sort result in increasing order of distance, means nearest place related on top.</br></br> <li>*imp* will use the priority to give important or highest priority result on top.  </br></br> <li>By Default it will use *Distance*</ul> </br> <h3>sortBy</h3> <p>sortBy will sort the given result on the basis of either *\"Distance\"* or *\"Relevance/Importance\"*.</p> <ul> <li> *dist* keyword is used to sort the given result in increasing order of distance, means nearest place related will show on top.</br></br> <li>*imp* will use the priority to give important or highest priority result on top.  </br></br> <li>By Default it will use *Distance*</ul> </br></br> <h2>Operators</h2><p>To send multiple keywords in a request, weâ€™ve defined a couple of operators that can help the developers wrap their applications around this functionality. Below are the operators:</p> <ul> <li>The `;` Operator: This operator is an `OR` operator. Defining multiple keywords separated with a `;` would provide results that satisfies either of the keywords.\\ <li>The `$` Operator: This operator is an `AND` operator. Defining multiple keywords separated with a `$` would provide results that satisfy all the provided keywords. (default). <li>The `,` operator: This operator is a seperator for using two or more `key:value` pairs and it has functionality of `AND($)`   </ul> <p>To use these operators, simple just send in the keywords parameter like below:</br> *&keywords=coffee;tea$sea food;alcohol* </br> The above nearby search would yield in results that either provide coffee or tea but must provide either sea food or alcohol. </p><br> <h2>Security Type</h2> <p>This APIs follow OAuth2 based security. <b>To know more on how to create your authorization tokens, please click the `Authorize` button below. More details available <a href=\"https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php\">here</a></b></br> <li><a href=\"https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-maps-auto-suggest-api-example.php\">Live Demo</a> </br><li><a href=\"https://www.mapmyindia.com/api/login\">Login/Sing Up</a> for API key and other access.<p></br> ",
    "termsOfService": "https://www.mapmyindia.com/api/terms-&-conditions",
    "contact": {
      "name": "MapmyIndia API Support",
      "url": "https://www.mapmyindia.com/api/#f_cont",
      "email": "apisupport@mapmyindia.com"
    },
    "version": "4.2.2.0"
  },
  "externalDocs": {
    "description": "Find out more about MapmyIndia APIs",
    "url": "https://www.mapmyindia.com/api/advanced-maps/doc/interactive-map-api"
  },
  "tags": [
    {
      "name": "Nearby"
    }
  ],
  "paths": {
    "/nearby/json": {
      "get": {
        "tags": [
          "Nearby"
        ],
        "summary": "Searh for near pois with refLocation",
        "description": "Nearby Places API, enables you to add discovery and search of nearby POIs by searching for a generic keyword used to describe a category of places or via the unique code assigned to that category.",
        "operationId": "NearbySearchAPI",
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "Generic keywrods search like FODCOF, Shoes, Coffee, Versace, Gucci, H&M, Adidas, Starbucks, B130 (Custom Code, POI, House Number, keyword, tag)",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refLocation",
            "in": "query",
            "description": "Provides the location around which the search will be performed {string (latitude[double],longitude[double])} (e.g. location=28.454,77.435)",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Provides number of the page to get results from.",
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "provides configured sorting operations for the client on cloud. Below are the available sorts:<li> dist:asc & dist:desc - will sort data in order of distance from the passed location (default).<li> name:asc & name:desc - will sort the data on alphabetically bases",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "provides the range of distance to search over (default 1000, min, 500, max, 10000)",
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bounds",
            "in": "query",
            "description": "(x1,y1,x2,y2) Allows the developer to send in map bounds to provide a nearby search of the geobounds. where x1,y1 are the lat lng of",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "it takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND)",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pod*",
            "in": "query",
            "description": "pod is search villages in 50 km radius and This parameter accepts \"vlg\" as value",
            "allowEmptyValue": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter*",
            "in": "query",
            "description": "*key:value* pair to specified our seach.(e.g. For all honda EV stations: *filter=cat_code:EVSTAN,brand_id:HONDAV*, where EVSTAN is category code and HONDAV is brand_id for Honda)",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchBy*",
            "in": "query",
            "description": "Sort result by *\"Distance\"* or *\"Importance/Relevance\"*",
            "allowEmptyValue": false,
            "required": false,
            "schema": {
              "type": "string",
              "default": "dist",
              "enum": [
                "dist",
                "imp"
              ]
            }
          },
          {
            "name": "sortBy*",
            "in": "query",
            "description": "Sort the given result by *\"Distance\"* or *\"Importance/Relevance\"*",
            "allowEmptyValue": false,
            "required": false,
            "schema": {
              "type": "string",
              "default": "dist",
              "enum": [
                "dist",
                "imp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "204": {
            "description": "No matches weâ€™re found for the provided query"
          },
          "400": {
            "description": "Somethingâ€™s just not right with the request"
          },
          "401": {
            "description": "Access Denied."
          },
          "403": {
            "description": "Services for this key has been suspended due to daily/hourly transactions limit"
          },
          "500": {
            "description": "Something went wrong."
          },
          "503": {
            "description": "Maintenance Break"
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://atlas.mapmyindia.com/api/places/",
            "description": "MapmyIndia Generic Nearby search API"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "keywords": {
        "title": "keywords",
        "type": "object",
        "properties": {
          "keywords": {
            "type": "string",
            "example": "FODCOF, Shoes, Coffee, Versace"
          }
        },
        "description": "Generic keywords or Custom Code"
      },
      "refLocation": {
        "title": "refLocation",
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude",
            "format": "double",
            "example": 28.63146
          },
          "lng": {
            "type": "number",
            "description": "Longitude",
            "format": "double",
            "example": 77.217423
          }
        },
        "description": "Georgraphic coordinate in decimal latitude/longitude format"
      },
      "filter": {
        "title": "filter",
        "type": "object",
        "properties": {
          "brand_id": {
            "type": "string",
            "description": "Brand ID of Vehicle Brands",
            "format": "string",
            "example": "HONDA"
          },
          "mac_plug_type": {
            "type": "string",
            "description": "EV Plug Type",
            "format": "string",
            "example": "PN3"
          },
          "model": {
            "type": "string",
            "description": "Vehicle Model Name",
            "format": "string",
            "example": "ABC123"
          }
        },
        "description": "Sample of fields to filter EV Charging Stations."
      },
      "searchBy": {
        "title": "searchBy/sortBy",
        "type": "object",
        "properties": {
          "searchBy": {
            "type": "string",
            "default": "dist",
            "enum": [
              "dist",
              "imp"
            ]
          }
        },
        "description": "You can Search the nearby EV Charging Stations and Sort the Result either by \"Distance\" or \"Importance/Relevance\"."
      },
      "pod": {
        "title": "POD",
        "type": "object",
        "properties": {
          "Keywords": {
            "type": "string",
            "example": "vlg"
          }
        },
        "description": "This parameter accepts \"vlg\" as value"
      },
      "Response": {
        "title": "Response",
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "example": 64,
            "description": "provides the distance from the provided location bias in meters"
          },
          "eloc": {
            "type": "string",
            "example": "CHZZ3S",
            "description": "Place Id of the location 6-char alphanumeric"
          },
          "email": {
            "type": "string",
            "example": "abc@gmail.com",
            "description": "Email for contact"
          },
          "entryLatitude": {
            "type": "number",
            "format": "double",
            "example": 28.631708,
            "description": "latitude of the entrance of the location"
          },
          "entryLongitude": {
            "type": "number",
            "format": "double",
            "example": 77.21665,
            "description": "longitude of the entrance of the location"
          },
          "keywords": {
            "type": "string",
            "example": "FODCON",
            "description": "provides an array of matched keywords or codes"
          },
          "landlineNo": {
            "type": "number",
            "example": 911133107634,
            "description": "phone no for contact"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 28.631834,
            "description": "Latitude of the location"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 77.2169160000001,
            "description": "longitude of the location"
          },
          "mobileNo": {
            "type": "number",
            "example": 919999827144,
            "description": "Phone number for contact"
          },
          "orderIndex": {
            "type": "integer",
            "example": 1,
            "description": "the order where this result should be placed"
          },
          "placeAddress": {
            "type": "string",
            "example": "G-72, 1st Floor, Outer Circle, Connaught Place, New Delhi, Delhi, 110001\"",
            "description": "Address of the location"
          },
          "placeName": {
            "type": "string",
            "example": "Lord of The Drinks",
            "description": "Name of the location"
          },
          "type": {
            "type": "string",
            "example": "poi",
            "description": "Type of location POI or Country or City"
          }
        }
      },
      "podResponse": {
        "title": "POD Response",
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "example": 1264,
            "description": "distance component show near by distance from your refLoaction"
          },
          "eloc": {
            "type": "string",
            "example": "2EAAS6"
          },
          "villageName": {
            "type": "string",
            "example": "Bilway"
          },
          "district": {
            "type": "string",
            "example": "Vidisha District"
          },
          "Subdistrict": {
            "type": "string",
            "example": "Basoda"
          },
          "state": {
            "type": "string",
            "example": "Madhya Pradesh"
          },
          "pincode": {
            "type": "string",
            "example": 464221
          },
          "placeAddress": {
            "type": "string",
            "example": "Basoda, Vidisha District, Madhya Pradesh, 464221"
          },
          "type": {
            "type": "string",
            "example": "Village"
          },
          "latitude": {
            "format": "double",
            "type": "number",
            "example": 23.953076010000075
          },
          "longitutde": {
            "format": "double",
            "type": "number",
            "example": 77.91979716000003
          },
          "orderIndex": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "Customcode_Response": {
        "title": "Custom Code Response",
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "description": "distance component show near distance from your refLoaction",
            "example": "435"
          },
          "name": {
            "type": "string",
            "example": "PRESTIGE HONDA - PHAGWARA",
            "description": "name component of the address"
          },
          "placeAddress": {
            "type": "string",
            "example": "8-A MODEL TOWN G.T ROAD PHAGWARA",
            "description": "Address of the location"
          },
          "categoryCode": {
            "type": "string",
            "example": "HNDAUT",
            "description": "categoryCode component of the address"
          },
          "city": {
            "type": "string",
            "example": "Phagwara",
            "description": "city component of the address"
          },
          "state": {
            "type": "string",
            "example": "Punjab",
            "description": "state component of the address"
          },
          "pincode": {
            "type": "string",
            "example": 144401,
            "description": "postalcode component of the address"
          },
          "latitude": {
            "format": "double",
            "type": "number",
            "example": 31.211088,
            "description": "Latitude of place"
          },
          "longitude": {
            "format": "double",
            "type": "number",
            "example": 75.771985,
            "description": "Longitude of place"
          },
          "Merchant_id": {
            "type": "string",
            "example": "Landma81725499004554",
            "description": "Merchant_id component of the address"
          },
          "Dealer_Ph_Num": {
            "type": "string",
            "example": 919878797788,
            "description": "Dealer phone number"
          },
          "Merchant_Key": {
            "type": "string",
            "example": "AyONzGU9zf5N7ucA",
            "description": "Merchant_Key component of the address"
          },
          "dealertype": {
            "type": "string",
            "example": "1S",
            "description": "dealertype component of the address"
          },
          "IWS_": {
            "type": "string",
            "example": "N",
            "description": "iWS_ component of the address"
          },
          "Dealer_Code": {
            "type": "string",
            "example": "DD004E1",
            "description": "Dealer_Code component of the address"
          },
          "orderIndex": {
            "type": "integer",
            "example": 1
          }
        }
      }
    },
    "securitySchemes": {
      "mmi_auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://outpost.mapmyindia.com/api/security/oauth/token",
            "scopes": {
              "Read": "read authorization for API"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}